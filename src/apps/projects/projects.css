/*
 * projects.css â€” Styles for Projects App in Windows XP Simulation
 * Styles the My Projects window, feed, and responsive layout.
 * @file src/apps/projects/projects.css
 */

/* ===== Base Layout & Background ===== */
html,
body {
  height: 100%;
  margin: 0;
  padding: 0;
  width: 100%;
  position: relative; /* For potential pseudo-elements or for positioning child elements like .lines. */
  overflow-x: hidden; /* Prevent horizontal scrollbars. */
  touch-action: none; /* Disable pinch-zoom and other default touch actions for a more native app feel. */
}

html {
  /* Layered background:
     1. Repeating thin light lines (0.03 opacity) on a transparent base, creating a subtle grid pattern.
     2. Larger spacing (80px) for this grid pattern.
     3. A darker base linear gradient from #4a4a4a to #2c2c2c provides the main backdrop. */
  background:
    repeating-linear-gradient(
      0deg,
      rgba(255, 255, 255, 0.03),
      /* Subtle horizontal lines */ rgba(255, 255, 255, 0.03) 1px,
      transparent 1px,
      transparent 80px /* Spacing for horizontal lines */
    ),
    repeating-linear-gradient(
      90deg,
      rgba(255, 255, 255, 0.03),
      /* Subtle vertical lines */ rgba(255, 255, 255, 0.03) 1px,
      transparent 1px,
      transparent 80px /* Spacing for vertical lines */
    ),
    linear-gradient(to bottom, #4a4a4a, #2c2c2c); /* Base dark gradient */
  background-color: transparent; /* Ensures html itself doesn't obscure body; body is also transparent here. */
  line-height: 1.6; /* Default line height for text content within the app. */
  position: relative; /* Establishes a positioning context for absolutely positioned children like .lines and .scroll-content. */
}

body {
  background-color: transparent; /* Body is transparent to show the HTML element's styled background. */
}

/* .scroll-content is the main viewport for the project feed, handling internal scrolling. */
.scroll-content {
  height: 100%;
  overflow-y: auto; /* Enable vertical scrolling for the feed. */
  position: relative; /* Needed for z-index stacking. */
  z-index: 10; /* Ensures feed content is above the animated .lines background effect. */
  background-color: transparent; /* Transparent so HTML background shows through. */
  color: #333; /* Default text color for content within the scrollable area. */
}

/* ===== Animated Decorative Lines Background ===== */
/* This section creates a subtle background animation of sweeping horizontal lines. */
.lines {
  position: absolute;
  top: 30px; /* Lines start 30px from the top of their container (html element). */
  left: 0;
  height: calc(100% - 30px); /* Lines fill the remaining height. */
  width: 100%; /* Lines span the full width. */
  display: flex;
  flex-direction: column; /* Stack individual .line elements vertically. */
  justify-content: space-around; /* Distribute lines evenly within their container. */
  z-index: 1; /* Positioned behind .scroll-content (z-index: 10) but above html's static background. */
  pointer-events: none; /* Lines are purely decorative and should not interfere with mouse events. */
}

/* Each .line acts as a track for an animated pseudo-element. */
.line {
  position: relative; /* For positioning the ::after pseudo-element. */
  width: 100%; /* Track is full width. */
  height: 1px; /* Defines the thickness of the track (and thus the sweeping highlight). */
  background-color: transparent; /* The track itself is invisible. */
  overflow: hidden; /* Ensures the ::after element is clipped if it extends beyond track bounds. */
}

/* The ::after pseudo-element is the visible sweeping highlight. */
.line::after {
  content: "";
  display: block;
  position: absolute;
  height: 100%; /* Matches the .line height (1px). */
  width: 20vw; /* Width of the sweeping highlight. */
  top: 0;
  left: 0; /* Starts at the left edge of the .line. */
  transform: translateX(
    -20vw
  ); /* Initially positioned completely off-screen to the left. */
  opacity: 0; /* Initially invisible. */
  /* Gradient for the highlight: fades in, solid core, fades out. */
  background: linear-gradient(
    to right,
    rgba(255, 255, 255, 0) 0%,
    /* Transparent start */ rgba(255, 255, 255, 0.6) 30%,
    /* Fades to 0.6 opacity white */ rgba(255, 255, 255, 0.6) 70%,
    /* Solid 0.6 opacity white */ rgba(255, 255, 255, 0) 100%
      /* Fades to transparent end */
  );
  animation: sweepLeftToRight 7s 0s infinite; /* Applies the sweep animation. */
  animation-fill-mode: forwards; /* Retains style of last keyframe (though animation is infinite). */
  animation-timing-function: cubic-bezier(
    0.4,
    0.26,
    0,
    0.97
  ); /* Custom easing for the sweep. */
}

/* Staggered animation delays for each line to create a cascading effect. */
.line:nth-child(1)::after {
  animation-delay: 0.5s;
}
.line:nth-child(2)::after {
  animation-delay: 2s;
}
.line:nth-child(3)::after {
  animation-delay: 3.5s;
}
.line:nth-child(4)::after {
  animation-delay: 5s;
}
.line:nth-child(5)::after {
  animation-delay: 6s;
}

/* Defines the left-to-right sweep animation for the .line::after pseudo-elements. */
@keyframes sweepLeftToRight {
  0% {
    transform: translateX(-20vw); /* Starts off-screen left, invisible. */
    opacity: 0;
  }
  5% {
    transform: translateX(-15vw); /* Slight movement before appearing. */
    opacity: 0;
  }
  15% {
    transform: translateX(0vw); /* Fully on-screen at the left edge, visible. */
    opacity: 1;
  }
  85% {
    transform: translateX(
      85vw
    ); /* Sweeps across to the right edge, still visible. */
    opacity: 1;
  }
  95% {
    transform: translateX(
      100vw
    ); /* Starts moving off-screen right, fading out. */
    opacity: 0;
  }
  100% {
    transform: translateX(105vw); /* Fully off-screen right, invisible. */
    opacity: 0;
  }
}

/* ====== Feed Container & Posts ====== */
/* .feed-container holds all the project posts and manages the masonry layout. */
.feed-container {
  position: relative; /* Establishes a positioning context for absolutely positioned .post elements. */
  padding: 10px; /* Default padding for mobile. */
  box-sizing: border-box;
  margin-top: 2px; /* Small top/bottom margin. */
  margin-bottom: 2px;
  margin-left: auto; /* Center the container horizontally. */
  margin-right: auto;
  opacity: 0; /* Initially hidden for fade-in effect once layout is ready (class .loaded added by JS). */
  transition: opacity 0.2s ease-in-out; /* Smooth fade-in transition. */
}

/* Class added by JS when projects are loaded and masonry layout is applied. */
.feed-container.loaded {
  opacity: 1;
}

/* Responsive padding and max-width for the feed container on larger screens. */
/* Tablet and Small Desktop: Typically 3 columns. */
@media (min-width: 768px) {
  .feed-container {
    padding: 12px 16px 12px 12px; /* Increased padding. */
    max-width: 1072px; /* Max width to control line length and aesthetics. */
  }
}

/* Large Desktop: Typically 4 columns. */
@media (min-width: 1200px) {
  .feed-container {
    padding: 24px 24px 24px 24px;
    max-width: 1408px;
  }
}

/* Individual project post styling. */
.post {
  border-radius: 8px; /* Rounded corners for posts. */
  width: 100%; /* Base width, actual width determined by masonry JS. */
  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.692); /* Default shadow for depth. */
  overflow: hidden; /* Clips content like images/videos to the rounded corners. */
  cursor: pointer; /* Indicates posts are clickable. */
  position: relative; /* For ::after overlay and text container positioning. Actual position set by JS for masonry. */
  border: 2px solid transparent; /* Transparent border for hover effect without layout shift. */
  /* Transitions for hover effects. z-index transition is delayed to happen after other transitions. */
  transition:
    transform 0.25s cubic-bezier(0.4, 0, 0.2, 1),
    box-shadow 0.25s cubic-bezier(0.4, 0, 0.2, 1),
    border-color 0.25s cubic-bezier(0.4, 0, 0.2, 1),
    z-index 0s 0.25s; /* Delay z-index change until other transitions are done to prevent clipping issues. */
}

/* Darkening overlay shown on post hover. */
.post::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background: rgba(0, 0, 0, 0.75); /* Dark semi-transparent background. */
  opacity: 0; /* Hidden by default. */
  transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1); /* Smooth fade-in/out. */
  pointer-events: none; /* Overlay does not intercept mouse events. */
  z-index: 1; /* Positioned above post content (img/video) but below text overlay. */
  transform: translateZ(
    0
  ); /* Promotes to its own compositing layer for smoother animations. */
}

/* Container for all text elements shown on post hover. */
.post-text-container {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  padding: 15px 20px 15px 20px; /* Padding within the text overlay. */
  box-sizing: border-box;
  text-align: center; /* Centers text elements by default (for desktop). */
  opacity: 0; /* Hidden by default. */
  transition: opacity 0.25s cubic-bezier(0.4, 0, 0.2, 1); /* Smooth fade-in/out. */
  pointer-events: none; /* Text container itself does not intercept mouse events (links inside will have pointer-events: auto). */
  z-index: 2; /* Positioned above the ::after overlay. */
  transform: translateZ(0); /* Promotes to its own compositing layer. */
  /* Flexbox for centering content vertically and horizontally. */
  flex-grow: 1; /* Allows it to take up space (though it's absolutely positioned, this can influence internal flex children). */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
}

/* Wrapper for main hover text (title and subtitle) to help with centering and grouping. */
.post-hover-text-main {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  flex-grow: 1; /* Takes up available vertical space to center title/subtitle within .post-text-container. */
}

/* Styling for the "PERSONAL WORK" / "CLIENT WORK" label on hover. */
.post-hover-project-work-label {
  font-family: "Wix Madefor Display", sans-serif;
  font-size: 0.85rem;
  font-weight: 600;
  color: #ffffff96; /* Semi-transparent white. */
  text-transform: uppercase;
  letter-spacing: 0.3px;
  width: 100%; /* Takes full width for alignment purposes (used with text-align in parent). */
}

/* Styling for the main project title on hover. */
.post-hover-title {
  color: white;
  font-family: "Work Sans", sans-serif;
  font-size: 1.6rem;
  font-weight: 700;
  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.5); /* Subtle text shadow for readability against varied backgrounds. */
  margin-bottom: 24px; /* Space below the title before subtitle or dots. */
  letter-spacing: 0.4px;
  line-height: 1.15;
  padding-left: 20px; /* Horizontal padding to prevent text touching edges of the card. */
  padding-right: 20px;
}

/* Styling for the project subtitle on hover. */
.post-hover-subtitle {
  color: #cccccc; /* Lighter grey for subtitle. */
  font-family: "Work Sans", sans-serif;
  font-size: 0.9rem;
  font-weight: 500;
  text-shadow: 0 1px 2px rgba(0, 0, 0, 0.4);
  line-height: 1.3;
}

/* Container for image indicator dots (shown if multiple lightbox images). */
.post-hover-image-dots {
  display: flex;
  justify-content: center; /* Center dots horizontally. */
  align-items: center;
  width: 100%;
  margin-top: auto; /* Pushes dots to the bottom of the .post-text-container (on desktop). */
  flex-shrink: 0; /* Prevents dots container from shrinking if text content is large. */
}

/* Individual indicator dot styling. */
.post-hover-image-dot {
  width: 7px;
  height: 7px;
  border-radius: 50%;
  background-color: #ffffff96; /* Semi-transparent white. */
  margin: 0 3px; /* Space between dots. */
}

/* Styling for images within image-type posts in the grid. */
.post.image-post img {
  display: block; /* Remove extra space below image. */
  width: 100%; /* Image takes full width of its .post container. */
  height: auto; /* Height adjusts to maintain aspect ratio. */
}

/* Styling for videos within video-type posts in the grid. */
.post.video-post video {
  display: block; /* Remove extra space below video. */
  width: 100%; /* Video takes full width. */
  height: auto; /* Allow natural aspect ratio. */
  min-width: 100%; /* Ensure it fills width. */
  object-fit: cover; /* Maintain aspect ratio. */
  box-sizing: border-box;
}

/* Additional relative positioning for video posts if needed for specific overlays/controls on videos. */
.video-post {
  position: relative;
}

/* Enable text selection for links within posts, overriding any global user-select: none. */
.post a,
a {
  user-select: text;
  -webkit-user-select: text;
  -moz-user-select: text;
  -ms-user-select: text;
}

/* Apply hover effects only on devices that support true hover (e.g., mouse, not primarily touch). */
@media (hover: hover) and (pointer: fine) {
  .feed-container .post:hover {
    transform: scale(1.03); /* Slight zoom effect on hover. */
    z-index: 20; /* Bring hovered post to the front to overlap neighbors. */
    box-shadow: 0 6px 24px rgba(0, 0, 0, 0.45); /* Enhanced shadow on hover. */
    border-color: #fff; /* White border highlight on hover. */
    transition-delay:
      0s, 0s, 0s, 0s; /* Ensure all transitions happen immediately on hover, overriding any base delays. */
  }

  /* Show the ::after overlay and the text container on hover for devices supporting true hover. */
  .feed-container .post:hover::after,
  .feed-container .post:hover .post-text-container {
    opacity: 1;
  }
}

/* Responsive adjustments for text overlay elements on medium screens and up. */
@media (min-width: 768px) {
  /* Adjust vertical positioning of dots and label for better spacing on larger cards. */
  .post-hover-image-dots {
    margin-bottom: 18px;
  }
  .post-hover-project-work-label {
    margin-top: 18px;
  }
}

/* Styles to show hover overlay via JS on mobile (typically triggered by scroll). */
/* When .post has class 'hover' (added by JS), show the text and ::after overlay. */
.feed-container .post.hover .post-text-container,
.feed-container .post.hover::after {
  opacity: 1;
}

/* Responsive adjustments for mobile devices (max-width: 767px). */
@media (max-width: 767px) {
  /* Adjust text container padding and alignment for mobile. */
  .post-text-container {
    padding: 10px 8px 10px 8px; /* Reduced padding for smaller screens. */
    justify-content: space-between; /* Space elements vertically. */
    align-items: stretch; /* Stretch items horizontally to fill container width. */
    text-align: left; /* Align text to the left for mobile. */
  }

  /* Mobile styling for project work label. */
  .post-hover-project-work-label {
    font-size: 0.7rem; /* Smaller font size. */
    margin-top: 0; /* Align to top. */
    margin-bottom: auto; /* Pushes other content down, effectively top-aligning this and bottom-aligning dots. */
    letter-spacing: 0.2px;
    align-self: flex-start; /* Align to the start (left) of the flex container. */
  }

  /* Mobile styling for project title. */
  .post-hover-title {
    font-size: 1.3rem; /* Smaller font size. */
    padding-left: 0; /* Remove horizontal padding as container is narrower. */
    padding-right: 0;
    margin-bottom: 12px; /* Reduced margin below title. */
    line-height: 1.15;
    align-self: flex-start; /* Align to the left. */
  }

  /* Mobile styling for project subtitle. */
  .post-hover-subtitle {
    font-size: 0.8rem; /* Smaller font size. */
    margin-top: 0;
    margin-bottom: 0;
    align-self: flex-start; /* Align to the left. */
  }

  /* Mobile styling for image indicator dots. */
  .post-hover-image-dots {
    margin-top: auto; /* Pushes to bottom. */
    margin-bottom: 0;
    justify-content: flex-start; /* Align dots to the left. */
    align-self: flex-start; /* Align container to the left. */
  }

  /* Mobile styling for individual dots. */
  .post-hover-image-dot {
    width: 8px; /* Slightly larger dots for better touch visibility/target. */
    height: 8px;
    margin: 0 3px;
  }

  /* Mobile layout for the main text wrapper (which contains title and subtitle). */
  .post-hover-text-main {
    flex-grow: 0; /* Does not grow; content determines its size. */
    order: unset; /* Maintain default DOM order relative to label and dots. */
    margin-bottom: 0;
    align-self: stretch; /* Stretches to fill the width of .post-text-container. */
    display: flex;
    flex-direction: column;
    align-items: flex-start; /* Align title/subtitle to the left. */
    justify-content: center;
  }
}
